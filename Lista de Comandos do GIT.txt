git --version verifica a versão do git instalado.

git config --global user.name "nome do usuário sem aspas"
git config --global user.email "email do usuário sem aspas"



git init

git status compara os arquivos do working área com os arquivos do repositório git e informa se tem alterações aguardando para serem adicionadas no stage área.

git branch Lista o nome de todas as branchs pesentes no repositório.

git branch "nome da branch sem aspas" Cria uma nova branch.

git checkout -b "nome da nova branch sem aspas" "nome de onde o branche deve ser criado "master" sem aspas" esse comando cria o novo branch e já faz o checkout para ele.

git checkout "nome da branch sem aspas acessa a branch"

git add ('nome do arquivo')adiciona conteúdo não gerenciado ao stage, git add . ('adiciona todos os arquivos na stage').

git add -i Abre um menu interativo para selecionar oque podemos fazer com os arquivos.

git rm --cached "nome do arquivo sem aspas" remove os arquivos do stage, arquivos que foram adicionados no comando anterior.

git commit -m "Mensagem resumo da alteração"

git log "Nome do arquivo" Lista todo o histórico de alterações 

git log "Mostra o histórico de todos os arquivos"



### COMANDOS PARA TRABALHAR EM EQUIPE REPOSITÓRIO REMOTO####

O cenário mais comum é uma equipe ter um repositório remoto ao qual todos têm acesso para enviar seus commits.
Nesse caso, antes de começar a desenvolver, é necessário baixar o repositório remoto e isso é feito com o comando git clone <caminho_para_o_repositório>.



git clone git://github.com/meurepoexemplo/meusite.git Realiza o clone de um repositório remoto para local

git fetch busca alterações no repositório remoto e trás para o repositório local

git branch "nome da branch sem aspas" lista  git branch -r

git fetch atualiza os branches locais

git pull para buscar alterações de um repositório remoto

git push envia as alterações para o respositório remoto Para verificar as alterações que foram enviadas ao repositório pode-se utilizar o parâmetro "--dry-run" no comando


### CRIANDO BRANCH ###
git checkout NovoBranch Define como principal o branch de trabalho.
git checkout -b <nome_do_novo_branch> Cria um novo branch e já define como principal.

### FAZENDO O MERGE ###

git merge <nome_do_branch> junta todas as alterações dos branchs no branch que foi passado o nome

O merge de um branch paralelo com o principal geralmente é devido a inclusão de uma funcionalidade ou correção de um bug, desse modo é recomendado
criar um ponto de release, ou seja, uma marcação indicando a versão do software a partir daquele commit, chamada de tag, e sua criação é feita com o comando git tag <nome_da_tag> <identificador_do_commit>


EX
git tag 1.0.0 a98668ab880ba9059cf587de851b989f09c71fbb


### COMPARANDO ARQUIVOS ###

git diff Compara a diferença entre todos os arquivos do diretório de trabalho working área e o repositório do git.

git diff nomeDoArquivo. compara a diferença entre o arquivo selecionado no diretório de trabalho working área e o repositório do git.

git diff --staged compara a diferença entre os arquivos presentes no diretório de trabalho working área e os arquivos presentes na stage area.
git diff -- cached visualiza as diferenças entre o staging area e o repositório basta utilizar o parâmetro --cached na chamada
git diff HEAD visualiza as diferenças entre o working área e stage com oque está no repositório basta utilizar o HEAD O HEAD é uma palavra chave
que se refere ao commit mais recente no branch que estamos atualmente.

git branch -d Test_B A opção -d excluirá o branch somente se você já fez o push e o merge com o branch remoto.

git branch -D Test_B Use a opção -D em vez disso se quiser forçar a exclusão do branch, mesmo que você ainda não tenha feito o push e o merge com ele.






### RENOMEANDO BRANCH###

git branch -m master meubranchmaster  O branch master foi renomeado para meubranchmaster. O parâmetro -m no primeiro comando solicita ao Git a execução da operação de renomeação.
Os outros dois parâmetros são: o nome do branch antigo seguido pelo nome do novo branch.



































